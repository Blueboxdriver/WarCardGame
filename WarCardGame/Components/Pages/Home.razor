@page "/"
@using WarCardGame.models
@using WarCardGame.services

<PageTitle>Home</PageTitle>

Please select the amount of players: 
<select @bind="_playerSelection">
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
    <option value="4">Four</option>
</select>

<button @onclick="StartGame" disabled="@_gameInProgress">Start Game</button>
<br/> <br/>
<button @onclick="StartRound"> Draw Cards </button>
<br/> <br/>
<button @onclick="FindWinner"> Compare Cards </button>
<br/> <br/>

@if (_game._PlayedCards.PlayedHand.Count == 0)
{
    foreach (var thing in _game._PlayerHands.HandQueue)
    {
        <p>@thing.Key | @thing.Value.Cards.Count </p>
    
    }
}
else if (_game._PlayedCards.PlayedHand.Count > 0) 
{
    foreach (var thing in _game._PlayedCards.PlayedHand)
    {
        <p>@thing.Key | @thing.Value.Suit | @thing.Value.Rank</p>
    }
}


<div style="float:right;">
    <p>Cards in Deck (Pot): @_game._Deck.Cards.Count</p>
</div>



@code {
    private GameRound _game = new GameRound();
    private int _playerCount;
    private string _playerSelection = "1";
    private string _playerName = "";
    private bool _gameInProgress = false;
    private Players _dictionaryOfPlayers = new Players();
    
    
    private void StartGame()
    {
        _gameInProgress = true;
        int.TryParse(_playerSelection, out _playerCount);
        _game.PlayerCount = _playerCount;

        for (int i = 0; i < _game.PlayerCount; i++)
        {
            _playerName = _dictionaryOfPlayers.PlayerNames[i];
            _game.ListOfActivePlayers.Add(_playerName);
            _game.StartGame(_playerName, _game.PlayerCount);
        }
    }

    private void StartRound()
    {
        foreach (var name in _game.ListOfActivePlayers)
        { ;
            _game.RoundStart(name);
        }
    }

    private void FindWinner()
    {
        _game.FindWinner();
        _game._PlayedCards.ClearPlay();
    }
}
